# CI/CD Pipeline Environment Setup Examples
# Choose the appropriate section based on your CI/CD platform

# ==========================================
# GITHUB ACTIONS EXAMPLE
# ==========================================
# File: .github/workflows/deploy.yml

name: Deploy to S3
on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Create environment file
        run: |
          echo "VITE_SUPABASE_URL=${{ secrets.VITE_SUPABASE_URL }}" >> .env.production
          echo "VITE_SUPABASE_ANON_KEY=${{ secrets.VITE_SUPABASE_ANON_KEY }}" >> .env.production
          echo "VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}" >> .env.production
      
      - name: Build application
        run: npm run build:prod
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}
      
      - name: Deploy to S3
        run: |
          aws s3 sync dist/ s3://${{ secrets.S3_BUCKET_NAME }} --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

# ==========================================
# GITLAB CI EXAMPLE
# ==========================================
# File: .gitlab-ci.yml

stages:
  - build
  - deploy

variables:
  NODE_VERSION: "18"

build:
  stage: build
  image: node:$NODE_VERSION
  script:
    - npm ci
    - echo "VITE_SUPABASE_URL=$VITE_SUPABASE_URL" >> .env.production
    - echo "VITE_SUPABASE_ANON_KEY=$VITE_SUPABASE_ANON_KEY" >> .env.production
    - echo "VITE_API_BASE_URL=$VITE_API_BASE_URL" >> .env.production
    - npm run build:prod
  artifacts:
    paths:
      - dist/
    expire_in: 1 hour

deploy:
  stage: deploy
  image: amazon/aws-cli:latest
  script:
    - aws s3 sync dist/ s3://$S3_BUCKET_NAME --delete
  dependencies:
    - build
  only:
    - main

# ==========================================
# JENKINS PIPELINE EXAMPLE
# ==========================================
# File: Jenkinsfile

pipeline {
    agent any
    
    environment {
        NODE_VERSION = '18'
        VITE_SUPABASE_URL = credentials('VITE_SUPABASE_URL')
        VITE_SUPABASE_ANON_KEY = credentials('VITE_SUPABASE_ANON_KEY')
        VITE_API_BASE_URL = credentials('VITE_API_BASE_URL')
        AWS_ACCESS_KEY_ID = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
        S3_BUCKET_NAME = credentials('S3_BUCKET_NAME')
    }
    
    stages {
        stage('Setup') {
            steps {
                sh 'nvm use $NODE_VERSION'
                sh 'npm ci'
            }
        }
        
        stage('Create Environment') {
            steps {
                sh '''
                    echo "VITE_SUPABASE_URL=$VITE_SUPABASE_URL" >> .env.production
                    echo "VITE_SUPABASE_ANON_KEY=$VITE_SUPABASE_ANON_KEY" >> .env.production
                    echo "VITE_API_BASE_URL=$VITE_API_BASE_URL" >> .env.production
                '''
            }
        }
        
        stage('Build') {
            steps {
                sh 'npm run build:prod'
            }
        }
        
        stage('Deploy') {
            steps {
                sh 'aws s3 sync dist/ s3://$S3_BUCKET_NAME --delete'
            }
        }
    }
}

# ==========================================
# AZURE DEVOPS EXAMPLE
# ==========================================
# File: azure-pipelines.yml

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  nodeVersion: '18.x'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: $(nodeVersion)
  displayName: 'Install Node.js'

- script: npm ci
  displayName: 'Install dependencies'

- script: |
    echo "VITE_SUPABASE_URL=$(VITE_SUPABASE_URL)" >> .env.production
    echo "VITE_SUPABASE_ANON_KEY=$(VITE_SUPABASE_ANON_KEY)" >> .env.production
    echo "VITE_API_BASE_URL=$(VITE_API_BASE_URL)" >> .env.production
  displayName: 'Create environment file'

- script: npm run build:prod
  displayName: 'Build application'

- task: S3Upload@1
  inputs:
    awsCredentials: 'AWS Service Connection'
    regionName: 'us-east-1'
    bucketName: '$(S3_BUCKET_NAME)'
    sourceFolder: 'dist'
    globExpressions: '**'
  displayName: 'Deploy to S3'

# ==========================================
# REQUIRED SECRETS/VARIABLES
# ==========================================
# Make sure to set these in your CI/CD platform:

# VITE_SUPABASE_URL          = https://your-project-id.supabase.co
# VITE_SUPABASE_ANON_KEY     = your-supabase-anon-key
# VITE_API_BASE_URL          = https://your-api-url.com
# AWS_ACCESS_KEY_ID          = your-aws-access-key
# AWS_SECRET_ACCESS_KEY      = your-aws-secret-key
# S3_BUCKET_NAME             = your-s3-bucket-name

# ==========================================
# LOCAL TESTING COMMANDS
# ==========================================
# Test the build process locally:

# 1. Create environment file:
#    ./setup-env.sh

# 2. Edit .env.production with actual values

# 3. Build for production:
#    npm run build:prod

# 4. Test the build:
#    npm run preview

# 5. Check for environment variable issues:
#    npm run build:prod 2>&1 | grep -i "supabase\|env\|error"

